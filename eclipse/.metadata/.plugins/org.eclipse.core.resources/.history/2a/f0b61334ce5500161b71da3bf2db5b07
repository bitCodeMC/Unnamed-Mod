package com.bitCode.test.init;

import java.util.List;
import java.util.Random;

import javax.annotation.Nullable;

import com.google.common.base.Predicate;

import net.minecraft.block.Block;
import net.minecraft.block.material.MapColor;
import net.minecraft.block.material.Material;
import net.minecraft.block.state.IBlockState;
import net.minecraft.entity.EntityLivingBase;
import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.entity.player.EntityPlayerMP;
import net.minecraft.init.MobEffects;
import net.minecraft.item.ItemStack;
import net.minecraft.potion.PotionEffect;
import net.minecraft.util.EnumFacing;
import net.minecraft.util.EnumHand;
import net.minecraft.util.math.AxisAlignedBB;
import net.minecraft.util.math.BlockPos;
import net.minecraft.world.World;

public class Feeder extends Block {

	public Feeder(Material materialIn) {
		super(materialIn);
		// TODO Auto-generated constructor stub
	}

	public Feeder(Material blockMaterialIn, MapColor blockMapColorIn) {
		super(blockMaterialIn, blockMapColorIn);
		// TODO Auto-generated constructor stub
	}

	@Override
	public void updateTick(World worldIn, BlockPos pos, IBlockState state, Random rand) {
//.getPlayers(EntityPlayerMP.class, new Predicate<EntityPlayerMP>());
		BlockPos pos1 =pos.add(-25, -25,-25);

		BlockPos pos2 =pos.add(25, 25,25);
		AxisAlignedBB area =new AxisAlignedBB(pos1, pos2); 
		List playerList = worldIn.getEntitiesWithinAABB(EntityPlayer.class, area);
		EntityPlayer player;
		for(int i=0; i<playerList.size(); i++){
			player = (EntityPlayer) playerList.get(i);
			player.addPotionEffect(new PotionEffect(MobEffects.SATURATION,1,1));
		}
	}
	@Override
    public boolean onBlockActivated(World worldIn, BlockPos pos, IBlockState state, EntityPlayer playerIn, EnumHand hand, @Nullable ItemStack heldItem, EnumFacing side, float hitX, float hitY, float hitZ)
    {
		playerIn.addPotionEffect(new PotionEffect(MobEffects.SATURATION,1,1));
        return false;
    }
	
}
